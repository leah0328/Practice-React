{"ast":null,"code":"// api/new-meetup\nimport { MongoClient } from \"mongodb\";\n\nasync function handler(req, res) {\n  if (req.method === \"POST\") {\n    // only execute the function if it is a POST request\n    const data = req.body; // the body of the incoming request = the data of the incoming request (those image, title and stuff)\n    // what you fill in when filling in the newMeetupForm\n    //const { image, title, address, description } = data; //object destructuring, also what the data(req.body) consist\n\n    console.log(\"Connecting MongoDB ...\");\n    const client = await MongoClient.connect(\"mongodb+srv://writeUser:qcBtbpVwU3MZ1MaT@cluster0.jnmkq.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\");\n    console.log(\"Succesffuly connected to MongoDB\"); //establish a connection with the database\n    // dont forget to replace the user & password, and database name (name it 'meetups' here)\n\n    const db = client.db(); // to access the databse we're connecting here\n\n    const meetupsCollection = db.collection(\"meetups\"); // and named the collection as 'meetups'\n    // overall the collection holds multiple meetups, each meetups will be a single documents in the collection(the database table)\n\n    const result = await meetupsCollection.insertOne(data); // insertOne(): insert one new document into the collection\n    // the document is just an object, hence should include the '{}'\n    // can directly insert 'data'(without {}) for that, since 'data' consists of the 'data(line12)' we need\n\n    console.log(result);\n    client.close(); // close the databse collection after we're done\n\n    res.status(201).json({\n      message: \"Meetup inserted!\"\n    }); // need to send back a response too\n    // .status() : to set a HTTP status code that will be returned, as a JSON response consist of the 'message: Meetup...!'\n    // 201 status code: indicates something was inserted successfully\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/ziyan/Documents/ReactProjects/06-onwards-to-a-bigger-project-starting-project/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","console","log","client","connect","db","meetupsCollection","collection","result","insertOne","close","status","json","message"],"mappings":"AAAA;AAEA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB;AACA,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB,CAFyB,CAGzB;AACA;AAEA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,UAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,iHADmB,CAArB;AAGAH,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAXyB,CAYzB;AACA;;AAEA,UAAMG,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CAfyB,CAeD;;AAExB,UAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CAjByB,CAkBzB;AACA;;AAEA,UAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB,CAA4BV,IAA5B,CAArB,CArByB,CAsBzB;AACA;AACA;;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AAEAL,IAAAA,MAAM,CAACO,KAAP,GA5ByB,CA4BT;;AAEhBb,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB,EA9ByB,CA+BzB;AACA;AACA;AACD;AACF;;AAED,eAAelB,OAAf","sourcesContent":["// api/new-meetup\n\nimport { MongoClient } from \"mongodb\";\n\nasync function handler(req, res) {\n  if (req.method === \"POST\") {\n    // only execute the function if it is a POST request\n    const data = req.body;\n    // the body of the incoming request = the data of the incoming request (those image, title and stuff)\n    // what you fill in when filling in the newMeetupForm\n\n    //const { image, title, address, description } = data; //object destructuring, also what the data(req.body) consist\n    console.log(\"Connecting MongoDB ...\");\n    const client = await MongoClient.connect(\n      \"mongodb+srv://writeUser:qcBtbpVwU3MZ1MaT@cluster0.jnmkq.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\"\n    );\n    console.log(\"Succesffuly connected to MongoDB\");\n    //establish a connection with the database\n    // dont forget to replace the user & password, and database name (name it 'meetups' here)\n\n    const db = client.db(); // to access the databse we're connecting here\n\n    const meetupsCollection = db.collection(\"meetups\");\n    // and named the collection as 'meetups'\n    // overall the collection holds multiple meetups, each meetups will be a single documents in the collection(the database table)\n\n    const result = await meetupsCollection.insertOne(data);\n    // insertOne(): insert one new document into the collection\n    // the document is just an object, hence should include the '{}'\n    // can directly insert 'data'(without {}) for that, since 'data' consists of the 'data(line12)' we need\n\n    console.log(result);\n\n    client.close(); // close the databse collection after we're done\n\n    res.status(201).json({ message: \"Meetup inserted!\" });\n    // need to send back a response too\n    // .status() : to set a HTTP status code that will be returned, as a JSON response consist of the 'message: Meetup...!'\n    // 201 status code: indicates something was inserted successfully\n  }\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}